# Generated by Django 5.1.3 on 2024-12-04 12:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AirplaneType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('model_name', models.CharField(max_length=40)),
                ('base_seats', models.IntegerField()),
                ('premium_seats', models.IntegerField()),
                ('business_seats', models.IntegerField()),
                ('business_rows', models.IntegerField(default=0)),
                ('first_class_rows', models.IntegerField(default=0)),
                ('economy_rows', models.IntegerField(default=0)),
                ('seats_per_business_row', models.IntegerField(default=4)),
                ('seats_per_first_class_row', models.IntegerField(default=2)),
                ('seats_per_economy_row', models.IntegerField(default=6)),
            ],
        ),
        migrations.CreateModel(
            name='BaggageSize',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('width', models.IntegerField(default=0)),
                ('height', models.IntegerField(default=0)),
                ('max_weight', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('payment', models.FloatField(default=0)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('surname', models.CharField(max_length=20)),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male'), ('U', 'Undisclosed')], default='U', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='AirUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Airplane',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('airplane_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airplanes', to='client_intr.airplanetype')),
            ],
        ),
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('models_name', models.CharField(max_length=50, unique=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airports', to='client_intr.city')),
            ],
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_of_flight', models.DateTimeField()),
                ('arriving_date', models.DateTimeField()),
                ('airplane', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flights', to='client_intr.airplane')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination_flights', to='client_intr.city')),
                ('destination_airport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrival_flights', to='client_intr.airport')),
                ('origin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='origin_flights', to='client_intr.city')),
                ('origin_airport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='origin_flights', to='client_intr.airport')),
            ],
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('EC', 'Economy'), ('BC', 'Business'), ('FC', 'First class')], max_length=2)),
                ('row', models.IntegerField(default=0)),
                ('column', models.IntegerField(default=0)),
                ('flight_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='client_intr.flight')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('baggage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='client_intr.baggagesize')),
                ('meal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='client_intr.meal')),
            ],
        ),
        migrations.AddField(
            model_name='flight',
            name='available_services',
            field=models.ManyToManyField(related_name='flights', to='client_intr.service'),
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='client_intr.order')),
                ('passenger_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seats', to='client_intr.passenger')),
                ('seat_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket', to='client_intr.seat')),
                ('services', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='client_intr.service')),
            ],
        ),
    ]
